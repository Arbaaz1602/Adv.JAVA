<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    ">
    
    <bean id="greet1" class="example.spring.core.WelcomService" lazy-init="true"></bean>
    <bean id="greet2" class="example.spring.core.HelloService" lazy-init="true"></bean>
    <!-- In the above declaration spring understands that a the bean of type HelloService is to be loaded lazily. Hence Spring instantiates that only when getBean() is called  -->
    
    <!-- Setting the values using setter injection -->
    <bean id="user1" class="example.spring.core.UserService" lazy-init="true">
    
    <property name="firstName" value="Umer"></property>
    <property name="lastName" value="Karbhari"></property>
    <property name="age" value="22"></property>
    
    </bean>
    <!-- Setting the values using constructor injection -->
    <bean id="user2" class="example.spring.core.UserService" lazy-init="true">
    <constructor-arg value="Arbaaz" index="0"></constructor-arg>
     <constructor-arg value="25" index="2"></constructor-arg>
     <constructor-arg value="Sayed" index="1"></constructor-arg>
     
    </bean>
    
    <!-- Declaring a bean of type Printer  -->
    <bean id="printer1" class="example.spring.core.Printer" >
    <property name="make" value="HP"> </property>
    <property name="type" value="ink-jet"> </property>
    </bean>
    
    <!-- Declaring another bean of type printer -->
     <bean id="printer2" class="example.spring.core.Printer" >
    <property name="make" value="Lonovo"> </property>
    <property name="type" value="B-W"> </property>
    </bean>  
    
    <!-- Declaring a bean of type PrinterService -->
    <bean id="prnService1" class="example.spring.core.PrinterService">
       <property name="content" value="Hello"> </property>
   		<property name="currentPrinter" ref="printer1"> </property>
    </bean>
    
    <!-- Bean of type PrinterSrvice for printer2 -->
        <bean id="prnService2" class="example.spring.core.PrinterService">
       <property name="content" value="Hello"> </property>
   		<property name="currentPrinter" ref="printer2"> </property>
    </bean>
    
    <!-- New Contact details example autowiring by name -->
    <bean id="Contact1" class="example.spring.core.Contact">
    <property name="mobileNo" value="987456321"></property>
    <property name="email" value="vdhsdfuykgfuw"></property>
    </bean>
    
        <bean id="Contact2" class="example.spring.core.Contact" primary="true">
    <property name="mobileNo" value="8390816370"></property>
    <property name="email" value="google"></property>
    </bean>
    
    <bean id="customer1" class="example.spring.core.Customer" autowire="byType">
    <!-- Specifying to use by name strategey of autowiring -->
    <property name="Customerid" value="id1"></property>
    <property name="name" value="Arbaaz"></property>
    
    </bean> 
    
    <bean id="pr" class="example.spring.core.Printer" scope="prototype">
    <property name="make" value="Cannon"> </property>
    <property name="type" value="color"> </property>
    </bean>
   
    
    </beans>